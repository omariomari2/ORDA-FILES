@import url('https://unpkg.com/normalize.css') layer(normalize);

@layer normalize, base, demo, scroll, hack;

@layer hack {
  @property --lh {
    syntax: '<integer>';
    inherits: true;
    initial-value: 0;
  }
  @property --measure {
    syntax: '<number>';
    inherits: true;
    initial-value: 0;
  }
  .measure {
    position: absolute;
    height: 1lh;
    aspect-ratio: 1;
    right: 0;
    bottom: 100%;

    overflow: auto;
    --lh: calc(1 / (1 - var(--measure)));
    timeline-scope: --unit;
    -webkit-animation: y linear;
            animation: y linear;
    animation-timeline: --unit;
    animation-range: entry 100% exit 100%;

    &::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      width: 1px;
      aspect-ratio: 1;
      view-timeline: --unit;
    }

    &::after {
      content: counter(lh) 'px';
      counter-reset: lh calc(var(--lh) * 0.86);
      position: absolute;
      right: 2ch;
      bottom: 1ch;
      font-size: 0.875rem;
      color: color-mix(in hsl, canvas, canvasText);
    }
  }
}
@-webkit-keyframes y {
  to {
    --measure: 1;
  }
}
@keyframes y {
  to {
    --measure: 1;
  }
}

@layer scroll {
  html {
    scrollbar-color: red #0000;
  }
  body {
    height: 400vh;
  }

  @supports (animation-timeline: scroll()) and (animation-range: entry 0 100%) {
    @property --progress {
      syntax: '<integer>';
      inherits: true;
      initial-value: 0;
    }

    section {
      --progress: 0;
      -webkit-animation: progress both linear;
              animation: progress both linear;
      animation-timeline: scroll(root);
      counter-set: p var(--progress);
    }

    .progress [aria-hidden] {
      padding-inline: 0.125rem;
      color: #0000;

      @media (max-width: 768px) {
        position: absolute;
        height: 1px;
        width: 1px;
      }
    }

    .progress .sync {
      position: absolute;
      inset: 0;
      color: #0000;
      container-type: size;
      span {
        position: absolute;
        right: 0.75rem;
        display: inline-block;
        translate: 0 calc((-50% + 1px) + (((var(--progress) * 1cqh) - 1px)));

        @media (max-width: 768px) {
          right: 1rem;
          transform-origin: 100% 50%;
          rotate: -90deg;
          translate: 0 -50%;
          transform: translateX(
            calc(-6px + (var(--progress) / 100) * (-100cqh + 100% + 12px))
          );
        }
      }
    }

    .progress .sync span::after {
      background: linear-gradient(90deg, light-dark(#fff, #000) 0 0) 50% 50% /
        100% 4px no-repeat;
      content: counter(p) '% complete';
      color: color-mix(in hsl, canvas, canvasText);
      position: absolute;
      font-variant: tabular-nums;
      padding-inline: 0.125rem;
      right: 0;
    }

    .heading h1 {
      background-position-x: 200%, 0;
      -webkit-animation: fill both linear;
              animation: fill both linear;
      animation-timeline: scroll(root);
    }
  }
  @-webkit-keyframes fill {
    to {
      background-position-x: 100%, 0;
    }
  }
  @keyframes fill {
    to {
      background-position-x: 100%, 0;
    }
  }
  @-webkit-keyframes progress {
    to {
      --progress: 100;
    }
  }
  @keyframes progress {
    to {
      --progress: 100;
    }
  }
}

@layer demo {
  section {
    --font-level: 4.5;
    width: 18ch;
    max-width: calc(100vw - 4rem);
    display: flex;
    position: relative;
    position: fixed;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    width: 1600px;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      width: 100vw;
      left: 50%;
      translate: -50% 0;
      border-block: 2px solid var(--line);
    }
  }

  .heading {
    position: relative;
    padding-left: 4px;

    h1::-moz-selection {
      background: red;
      color: white;
    }

    h1::selection {
      background: red;
      color: white;
    }

    &:has(:focus-visible) {
      outline: 0.05em dashed red;
      outline-offset: 0.1em;
    }

    &::after {
      content: '';
      position: absolute;
      left: 0;
      right: 0;
      height: 100vh;
      top: 50%;
      translate: -0% -50%;
      border-inline: 2px solid var(--line);
      pointer-events: none;
    }
  }

  .progress {
    font-size: 0.875rem;
    white-space: nowrap;
    display: grid;
    place-items: start;
    padding-inline: 0.75rem;
    position: relative;

    .sync span {
      padding: 0.125rem;
      position: relative;

      @media (min-width: 768px) {
        &::before {
          content: '';
          position: absolute;
          left: 50%;
          top: 50%;
          height: 1px;
          width: 200vmax;
          background: var(--line);
          z-index: -1;
          translate: -50% -50%;
        }
      }
    }

    @media (max-width: 768px) {
      position: absolute;
      top: 0;
      bottom: 0;
      right: 100%;
      padding: 0;
      width: 2rem;
      z-index: 2;
      .sync {
        padding: 0;
      }
    }
  }

  h1 {
    margin: 0;
    line-height: 1;
    font-size: inherit;
    background-image: linear-gradient(90deg, canvasText 0 0);
    background-size: 200% 1lh;
    background-repeat: no-repeat;
    background-position-x: 180%;
    background-position-y: 100%;
    color: #0000;
    -webkit-background-clip: text;
            background-clip: text;
    -webkit-text-stroke: 2px canvasText;
    display: inline;
    text-wrap: pretty;
    letter-spacing: 0.05ch;
    outline-offset: 0.5rem;
    outline: none;

    @media (max-width: 768px) {
      -webkit-text-stroke: unset;
      background-image: linear-gradient(90deg, canvasText 0 0),
        linear-gradient(90deg, color-mix(in hsl, canvasText, #0000 85%) 0 0);
      background-size: 200% 1lh, 100% 100%;
      background-repeat: no-repeat, repeat;
      background-position-x: 180%;
      background-position-y: 100%;
    }
  }
  h1:focus-visible {
    outline-style: none;
  }

  :root {
    --line: color-mix(in hsl, canvasText, canvas 75%);
  }

  body::before {
    content: '';
    width: 2rem;
    position: fixed;
    left: 0;
    height: 100svh;
    top: 0;
    border-right: 1px solid var(--line);
    z-index: -1;

    @media (max-width: 768px) {
      opacity: 0;
    }
  }
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.15;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
    color-scheme: light dark;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    background: light-dark(#fff, #000);
    display: grid;
    place-items: center;
    min-height: 100vh;
    overflow-x: hidden;
    font-family: Arial, Helvetica, sans-serif;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 3rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}

div.tp-dfwv {
  position: fixed;
  top: unset;
  bottom: 8px;
}